in vec2 v_texCoord;

out vec4 color;

layout(binding = 0) uniform sampler2DArray blurred;
layout(binding = 1) uniform sampler2DArray unblurred;
layout(binding = 16) uniform sampler2DArray depth;


// Store Uniforms of 'focalDistance', 'Q', 'P' to calculate DepthOfField blur amount
void main()
{
	vec4 bl = texture( blurred, vec3(v_texCoord, 0.0));		// blurred texture value
	vec4 unb = texture( unblurred, vec3(v_texCoord, 0.0));	// unblurred texture value
	float d = texture( depth, vec3(v_texCoord, 0.0)).r		// Gets Depth scaler
	z = -(Q / (1 - 2 * d - P));								// RHS: z goes from 0 -> -infinity

	float delta = abs(z - focalDistance);
	d = smoothstep(0.0, 2.5, d);							// Change sharp-focus range

	color = mix(unb, bl, d);
	color.a = 1.0;
	return;
}